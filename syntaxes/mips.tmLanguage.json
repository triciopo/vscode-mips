{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "MIPS",
  "scopeName": "source.mips",
  "patterns": [
    {
      "include": "#numeric"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#registers"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "numeric": {
      "patterns": [
        {
          "name": "constant.numeric.mips",
          "match": "\\b(\\d+|0(x|X)[a-fA-F0-9]+)\\b"
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "name": "support.variable.mips",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*):"
        },
        {
          "name": "support.class.mips",
          "match": "\\.(data|text|globl|include)"
        },
        {
          "name": "support.function.mips",
          "match": "\\.(word|byte|half|float|double|asciiz|ascii|space)"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "name": "support.variable.mips",
          "match": "\\$(t|v|s|a)[0-9]"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "(#).*$",
          "name": "comment.mips"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.operators.mips",
          "match": "\\b(add|addi|addiu|addu|sub|subu|mul|mulu|div|divu|rem|remu|neg|negu|move)\\b"
        },
        {
          "name": "keyword.load.mips",
          "match": "\\b(lb|lbu|lh|lhu|lw|ld|li|la)\\b"
        },
        {
          "name": "keyword.store.mips",
          "match": "\\b(sb|sh|sw|sd)\\b"
        },
        {
          "name": "keyword.logic.mips",
          "match": "\\b(and|andi|or|ori|xor|xori|nor|not|sll|sllv|srl|srlv|sra|srav|rol|ror)\\b"
        },
        {
          "name": "keyword.set.mips",
          "match": "\\b(seq|sge|sgeu|sgt|sgtu|sle|sleu|slt|sltu|sne)\\b"
        },
        {
          "name": "keyword.control.mips",
          "match": "\\b(blt|bltz|beqz|ble|blez|beq|beqz|bge|bgez|bgt|bgtz|bne|bnez|j|jr|jal|jalr|syscall|break)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.mips",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "keyword.control.mips",
          "match": "\\\\."
        }
      ]
    }
  }
}
